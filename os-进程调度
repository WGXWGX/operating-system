#include <iostream>
using namespace std;

//定义进程
typedef struct pcb{
   // char id;
	int arrive,start,server,finish,time_run;
	//到达时间 服务时间
	int times;
    struct pcb *next;
}PCB;
PCB *ready,*running,*blocked,finished;
int sum_time=0;
int num_time=0;
int daiquan_time=0;
void Insert(PCB *head,PCB *process)
{
    PCB *p=head;
    while(p->next!=NULL)
    {
        p=p->next;
    }
    p->next=process;
    process->next=NULL;
}
PCB *del(PCB *head)
{
    PCB *p=head->next;
 //   while(p)
   // {
        head->next=p->next;
        p->next=NULL;
    //}
    return p;
}


void FCFS(int *Ari_time,int *Ser_time,int num)
{
   // cout<<Ari_time[0]<<"asdsad"<<endl;
    //cout<<Ser_time[0]<<"asdsad"<<endl;
    int i=0,j=0;
    int *Fin_time = new int[num];
    int *T =new int[num];
    double *W = new double[num];
    double Aver_t=0;
    double Aver_w=0;
    int last_fin_t=0;


    for(i=0;i<num;i++)
    {
        //如果到达时间大于当前最终完成时间
        if(Ari_time[i]>last_fin_t)
        {
            Fin_time[i]=Ari_time[i]+Ser_time[i];
        }
        else
        {
            Fin_time[i]=last_fin_t+Ser_time[i];
        }
        last_fin_t=Fin_time[i];
       // cout<<last_fin_t<<"eesed"<<endl;
        T[i]=Fin_time[i]-Ari_time[i];//周转时间
        W[i]=T[i]/(double)Ser_time[i];//带权周转时间  周转时间/服务时间
    }

    cout<<"完成时刻 ";
    for(i=0;i<num;i++)
    {
        cout<<Fin_time[i]<<" ";
    }
    cout<<endl;

    cout<<"周转     ";
    int allWholeTime=0;
    for(i=0;i<num;i++)
    {
        allWholeTime+=T[i];
        cout<<T[i]<<" ";
    }

    cout<<endl;
    Aver_t=allWholeTime/(double)num;
    cout<<"平均周转 ";
    cout<<Aver_t<<endl;

    cout<<"带权周转 ";
    double allWeightWholeTime=0;
    for(i=0;i<num;i++)
    {
        allWeightWholeTime+=W[i];
        cout<<W[i]<<" ";
    }
    cout<<endl;
    Aver_w = allWeightWholeTime/num;
    cout<<"平均带权周转 ";
    cout<<Aver_w<<endl;
    cout<<endl;
}




int main()
{

	ready=new PCB;
    ready->next=NULL;
    blocked=new PCB;
    blocked->next=NULL;
    int num,i=0,j=0,k=0;
	cout<<"*********************进程调度***********************\n"<<endl;
    cout<<"请输入进程的个数 "<<endl;

    cin>>num;
    int *Ari_time=new int[num];
    int *Ser_time=new int[num];
    cout<<"请输入到达时间："<<endl;
    for(i=0;i<num;i++)
    {
        cin>>Ari_time[i];

    }
    cout<<"请输入服务时间："<<endl;
    for(j=0;j<num;j++)
    {
        cin>>Ser_time[j];

    }
   // cout<<Ser_time[0]<<endl;
	for(k=0;k<num;k++)//这里相当于创建进程
    {
		PCB *p=new PCB;
		p->arrive=Ari_time[k];
		p->server=Ser_time[k];
		p->time_run=p->server;
		p->next=NULL;
	//	p=p->next;
		 Insert(ready,p);
    }




    cout<<"*********FCFS 算法***********\n";
    FCFS(Ari_time,Ser_time,num);
    cout<<endl;

    cout<<"*********SJF 算法************";
    SJF(Ari_time,Ser_time,num);

    cout<<"********时间片轮转算法********"<<endl;
    Times(num);
}
