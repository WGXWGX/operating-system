<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Process scheduling</title>
	<style>
		*{
			padding: 0;
			margin: 0;
		}
		.wrapper{
			width: 700px;
			height: 600px;
			position: absolute;
			border: 1px solid #333;
			left: 50%;
			margin-left: -350px;
			top: 10px;
		}
		.show{
			width: 500px;
			height: 600px;
			overflow: auto;
		}
		.button{
			width: 200px;
			height: 600px;
			position: absolute;
			left: 500px;
			border-left: 1px solid #ccc;
			top: 0;
		}
		.button button{
			width: 150px;
			height: 40px;
			margin-top: 20px;
			margin-left: 25px;
			background: #333;
			color: #fff;
		}
		.showMemory{
			position: fixed;
			left: 10px;
			top: 100px;
			width: 250px;
			height: 500px;
			border: #333 1px solid;
		}
		#creatPCB{
			width: 150px;
			height: 40px;
			background: #333;
			color: #fff;
			position: fixed;
			top: 30px;
			left: 50px;
		}
	</style>
</head>
<body>
	<div class="wrapper">
		<div class="show"></div>
		<div class="button">
			<button id="create">创建进程</button>
			<button id="stop">终止进程</button>
			<button id="timeover">时间片到</button>
			<button id="block">阻塞进程</button>
			<button id="wake">唤醒进程</button>
			<button id="checkmemory">查看内存</button>
			<button id="call">调度进程</button>
			<button id="clear">clear</button>
			<button id="exit">退出</button>
		</div>
	</div>
		<button id="creatPCB">创建内存</button>
		<div class="showMemory"></div>
	<script>
		var show = document.getElementsByClassName('show')[0];
		var showMemory = document.getElementsByClassName('showMemory')[0];
		var ready = [];
		var block = [];
		var running = [];
		var flag = 1;
		var oCreatPCB = document.getElementById('creatPCB'); 
		var oCreate = document.getElementById('create');//
		var oStop = document.getElementById('stop');//
		var oTimeover = document.getElementById('timeover');//
		var oBlock = document.getElementById('block');//
		var oWake = document.getElementById('wake');//
		var oCheckmemory = document.getElementById('checkmemory');
		var oCall = document.getElementById('call');//
		var oClear = document.getElementById('clear');//
		var oExit = document.getElementById('exit');//
		var begin;
		var size;
		var arr = new Array();
		oCreatPCB.onclick = function(){
			creatPCB();
		}
		oCreate.onclick = function(){
			createProcess();
		}
		oStop.onclick = function(){
			stopProcess();
		}
		oTimeover.onclick = function(){
			timeOverProcess();
		}
		oBlock.onclick = function(){
			blockProcess();
		}
		oWake.onclick = function(){
			wakeProcess();
		}
		oCheckmemory.onclick = function(){
			checkMemory();
		}
		oClear.onclick = function(){
			// alert('123');
			location.reload();
		}
		oExit.onclick = function(){
			window.close();
			// alert('123');
		}
		oCall.onclick = function(){
			callProcess();
		}
		function creatPCB(){
			begin = window.prompt("请输入内存起始begin: ");
			size = window.prompt("请输入内存长度size: ");
			arr.length = size;
			console.log(arr.length);
			begin = parseInt(begin);
			size = parseInt(size);
			alert('内存创建成功');
			showAgain();
		}
		function createProcess(){
			var inSize = window.prompt("请输入此进程的长度size: ");
			inSize = parseInt(inSize);
			if(inSize !== 0 && inSize !== '' && inSize > 0){
				if(size - inSize >= 0){
					
					if(running.length === 0 && block.length === 0 && ready.length === 0){
						flag = 1;
					}
					var temp = new Object();
					temp.name = 'process' + flag + "<" + begin + ","+ inSize + ">";
					temp.size = inSize;
					size = size - inSize;
					begin = begin + inSize;
					
					
					// console.log(inSize);
					// var temp = //对象试试
					ready.push(temp.name);
					if(running.length === 0){
						var temp1 = ready.shift();
						running.push(temp1);
					}
					flag++;
					alert('进程创建成功');
					showProcess();
				}else{
					alert('sorry,内存不足，创建失败');
				}
			}else{
				alert('sorry,内存长度不能为0或空或负数');
			}
		}
		function showAgain(){
			var oDiv = document.createElement('div');
			oDiv.style.width = '240px';
			oDiv.style.height = '50px';
			oDiv.style.borderBottom = '1px solid red';
			oDiv.style.paddingLeft = '8px';
			oDiv.style.fontSize = '16px';
			oDiv.style.fontWeight = 'bold';
			oDiv.style.marginTop = '5px';
			showMemory.appendChild(oDiv);
			oDiv.innerHTML = "剩余的内存的起始位置为 : " + begin + "<br>" + "剩余的内存为 : " + size;
		}
		function showProcess(){
			var oDiv = document.createElement('div');
			oDiv.style.width = '490px';
			oDiv.style.height = '80px';
			oDiv.style.borderBottom = '1px solid red';
			oDiv.style.paddingLeft = '8px';
			oDiv.style.fontSize = '16px';
			oDiv.style.fontWeight = 'bold';
			show.appendChild(oDiv);
			oDiv.innerHTML = " ready : " + ready + "<br>" + " running : " + running + "<br>" + " block : " + block + "<br>";
		}
		function blockProcess(){
			if(running.length !== 0){
				var process = running.shift();
				block.push(process);
				if(ready.length !== 0){
					var process1 = ready.shift();
					running.push(process1);
				}
				showProcess();
			}else{
				alert('sorry,进程空');
			}
		}
		
		function timeOverProcess(){
			if(running.length !== 0){
				var process = running.shift();
				ready.push(process);
				if(ready.length !== 0){
					var process1 = ready.shift();
					running.push(process1);
				}
				showProcess();
			}else{
				alert('sorry,无进程');
			}
		}
		function wakeProcess(){
			if(block.length !== 0){
				var process = block.shift();
				ready.push(process);
				if(running.length === 0){
					var process1 = ready.shift();
					running.push(process1);
				}
				showProcess();
			}else{
				alert('sorry,无进程');
			}
		} 
		function checkMemory(){
			if(size >= 0){
				showAgain();	
			}else{
				alert('sorry,内存无');
			}
			
		}
		function stopProcess(){
			if(running.length !== 0){
				running.shift();
				if(ready.length !== 0){
					var process = ready.shift();
					running.push(process);
				}
				showProcess();
				console.log(running);
			}else{
				alert('sorry,无进程');
			}
		}
		function callProcess(){
			if(running.length !== 0){
				var process = running.shift();
				ready.push(process);
				if(ready.length !== 0){
					var process1 = ready.shift();
					running.push(process1);
				}
				showProcess();
			}else{
				alert('sorry,无进程');
			}
		}
		function config(){
			show.innerHTML = "";
		}
		config();		
	</script>
</body>
</html>
